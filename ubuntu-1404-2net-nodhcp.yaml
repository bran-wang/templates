heat_template_version: 2013-05-23

description: HOT template to deploy two servers to an existing Neutron network.

parameters:
  key_name:
    type: string
    description: Name of keypair to assign to servers
    default: lxiaojun
  image:
    type: string
    description: Name of image to use for servers
    default: U10-x86_64-cfntools
  flavor:
    type: string
    description: Flavor to use for servers
    default: m1.small
  root_password:
    type: string
    description: Root password
    default: Passw0rd
  net_id:
    type: string
    description: ID of Neutron network into which servers get deployed
    default: 2127e712-490a-4741-9933-eaed28776b96
  net_id2:
    type: string
    description: ID of Neutron network into which servers get deployed
    default: 7a69a518-385e-45df-8c97-4bbc902f0f14
  # subnet_id:
  #   type: string
  #   description: ID of Neutron sub network into which servers get deployed
  #   default: 2f261c9e-7591-4209-b745-9861ce91b812
  ip_address2:
    type: string
    description: Desired IP in subnet
    default: 11.0.0.99
  ip_address:
    type: string
    description: Desired IP in subnet
    default: 10.0.0.99

resources:
  server1:
    type: OS::Nova::Server
    properties:
      name: Server1
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_param: key_name }
      networks:
        - port: { get_resource: server1_port1 }
        - port: { get_resource: server1_port2 }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v

            cat << EOF | passwd root
            root_password
            root_password
            EOF
            cat << EOF > /etc/network/interfaces.d/eth0.cfg
            auto eth0
            iface eth0 inet static
            address ip_addr
            netmask 255.255.255.0
            gateway 10.0.0.1
            EOF
            cat << EOF > /etc/network/interfaces.d/eth1.cfg
            auto eth1
            iface eth1 inet static
            address ip_addr2
            netmask 255.255.255.0
            EOF
            ifdown eth0
            ifup eth0
            ifdown eth1
            ifup eth1
          params:
            root_password: { get_param: root_password }
            ip_addr: { get_param: ip_address }
            ip_addr2: { get_param: ip_address2 }

  server1_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id }
      fixed_ips:
        # - subnet: { get_param: subnet_id }
        - ip_address: { get_param: ip_address }
      security_groups: [{ get_resource: server_security_group }]

  server1_port2:
    type: OS::Neutron::Port
    properties:
      network_id: { get_param: net_id2 }
      fixed_ips:
        # - subnet: { get_param: subnet_id }
        - ip_address: { get_param: ip_address2 }
      security_groups: [{ get_resource: server_security_group }]

  server_security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Test group to demonstrate Neutron security group functionality with Heat.
      name: test-security-group
      rules: [
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: tcp,
        port_range_min: 22,
        port_range_max: 22},
        {remote_ip_prefix: 0.0.0.0/0,
        protocol: icmp}]

outputs:
  server1_provider_ip:
    description: IP address of server1 in provider network
    value: { get_attr: [ server1, first_address ] }
